{"version":3,"sources":["webpack:///src/app/admin/add-or-edit-category/add-or-edit-category.component.ts","webpack:///src/app/admin/add-or-edit-category/add-or-edit-category.component.html","webpack:///src/app/admin/add-or-edit-product/add-or-edit-product.component.ts","webpack:///src/app/admin/add-or-edit-product/add-or-edit-product.component.html","webpack:///src/app/admin/admin-routing.module.ts","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/listing-categories/listing-categories.component.ts","webpack:///src/app/admin/listing-categories/listing-categories.component.html","webpack:///src/app/admin/listing-orders/listing-orders.component.ts","webpack:///src/app/admin/listing-orders/listing-orders.component.html","webpack:///src/app/admin/listing-products/listing-products.component.ts","webpack:///src/app/admin/listing-products/listing-products.component.html","webpack:///src/app/admin/order/order.component.ts","webpack:///src/app/admin/order/order.component.html"],"names":["AddOrEditCategoryComponent","fb","router","activatedRoute","categoryService","title","editMode","displayMessage","validationMessages","name","required","minlength","genericValidator","subscription","params","subscribe","id","initForm","controlBlurs","formInputElements","map","formControl","nativeElement","addOREditCategoryForm","valueChanges","pipe","value","processMessages","console","log","getCategoryById","next","category","group","minLength","valid","dirty","addCategory","reset","navigate","updateCategory","saveCategory","onCancel","selector","templateUrl","styleUrls","read","AddOrEditProductComponent","productService","price","addOREditProductForm","getProductById","product","description","categoryName","addProduct","updateProduct","saveProduct","routes","path","component","children","pathMatch","redirectTo","admin","productsList","route","newProduct","editProduct","categoriesList","newCategory","editCategory","ordersList","orderDetails","AdminRoutingModule","forChild","declarations","imports","exports","AdminComponent","productMenuStatus","categoryMenuStatus","subMenu","classList","contains","style","maxHeight","scrollHeight","remove","add","toggleSubMenu","AdminModule","ListingCategoriesComponent","Categories","getCategories","categories","ListingOrdersComponent","orderService","signalRService","getOrders","orders","orderReceived","order","unshift","ListingProductsComponent","products","productsSub","getProductsSubject","unsubscribe","OrderComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;QAcaA,0B;AAgBX,0CACUC,EADV,EAEUC,MAFV,EAGUC,cAHV,EAIUC,eAJV,EAI0C;AAAA;;AAHhC,aAAAH,EAAA,GAAAA,EAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AAfV,aAAAC,KAAA,GAAQ,cAAR;AAGA,aAAAC,QAAA,GAAoB,KAApB;AAGA,aAAAC,cAAA,GAA4C,EAA5C;AAWE,aAAKC,kBAAL,GAA0B;AACxBC,cAAI,EAAE;AACJC,oBAAQ,EAAE,2BADN;AAEJC,qBAAS,EAAE;AAFP;AADkB,SAA1B;AAMA,aAAKC,gBAAL,GAAwB,IAAI,qGAAJ,CAAqB,KAAKJ,kBAA1B,CAAxB;AACD;;;;mCAEO;AAAA;;AACN,eAAKK,YAAL,GAAoB,KAAKV,cAAL,CAAoBW,MAApB,CAA2BC,SAA3B,CAClB,UAACD,MAAD,EAAoB;AAClB,iBAAI,CAACE,EAAL,GAAU,CAACF,MAAM,CAAC,IAAD,CAAjB;AACA,iBAAI,CAACR,QAAL,GAAgBQ,MAAM,CAAC,IAAD,CAAN,IAAgB,IAAhC;;AACA,iBAAI,CAACG,QAAL;AACD,WALiB,CAApB;AAOD;;;0CAEc;AAAA;;AACb;AACA;AACA,cAAMC,YAAY,GAAsB,KAAKC,iBAAL,CAAuBC,GAAvB,CAA2B,UAACC,WAAD;AAAA,mBACjE,uDAAUA,WAAW,CAACC,aAAtB,EAAqC,MAArC,CADiE;AAAA,WAA3B,CAAxC,CAHa,CAOb;AACA;;AACA,4EAAM,KAAKC,qBAAL,CAA2BC,YAAjC,4BAAkDN,YAAlD,IACGO,IADH,CACQ,oEAAa,IAAb,CADR,EAEGV,SAFH,CAEa,UAACW,KAAD,EAAW;AACpB,kBAAI,CAACnB,cAAL,GAAsB,MAAI,CAACK,gBAAL,CAAsBe,eAAtB,CACpB,MAAI,CAACJ,qBADe,CAAtB;AAGD,WANH;AAOD;;;mCAGkB;AAAA;;AACjB,cAAI,KAAKjB,QAAT,EAAmB;AACjBsB,mBAAO,CAACC,GAAR;AACA,iBAAKzB,eAAL,CAAqB0B,eAArB,CAAqC,KAAKd,EAA1C,EAA8CD,SAA9C,CAAwD;AACtDgB,kBAAI,EAAE,cAAAC,QAAQ,EAAI;AAChB,sBAAI,CAACA,QAAL,GAAgBA,QAAhB;AACA,sBAAI,CAAC3B,KAAL,4BAA+B,MAAI,CAAC2B,QAAL,CAAcvB,IAA7C,EAFgB,CAIhB;AAEA;AACA;AACA;;AACA,sBAAI,CAACc,qBAAL,GAA6B,MAAI,CAACtB,EAAL,CAAQgC,KAAR,CAAc;AACzCxB,sBAAI,EAAE,CAAC,MAAI,CAACuB,QAAL,CAAcvB,IAAf,EAAqB,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWwB,SAAX,CAAqB,CAArB,CAAtB,CAArB;AADmC,iBAAd,CAA7B;AAGD;AAbqD,aAAxD;AAeD,WAjBD,MAiBK;AACH;AACA;AACA;AACA,iBAAK7B,KAAL,GAAa,cAAb;AACA,iBAAKkB,qBAAL,GAA6B,KAAKtB,EAAL,CAAQgC,KAAR,CAAc;AACzCxB,kBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWwB,SAAX,CAAqB,CAArB,CAAtB,CAAL;AADmC,aAAd,CAA7B;AAGD;AACF;;;uCACW;AAAA;;AACR,cAAI,KAAKX,qBAAL,CAA2BY,KAA/B,EAAsC;AACpC,gBAAI,KAAKZ,qBAAL,CAA2Ba,KAA/B,EAAsC;AACpC,kBAAMJ,QAAQ,GAAG,MAAH,OAAG,CAAH,kBAAO,KAAKA,QAAZ,CAAG,EAAsB,KAAKT,qBAAL,CAA2BG,KAAjD,CAAjB;;AACA,kBAAG,CAAC,KAAKpB,QAAT,EAAkB;AAChB,qBAAKF,eAAL,CAAqBiC,WAArB,CAAiCL,QAAjC,EAA2CjB,SAA3C,CAAqD;AACnDgB,sBAAI,EAAE,gBAAM;AACV,0BAAI,CAACR,qBAAL,CAA2Be,KAA3B;;AACA,0BAAI,CAACpC,MAAL,CAAYqC,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD;AAJkD,iBAArD;AAMD,eAPD,MAOO;AACP,qBAAKnC,eAAL,CAAqBoC,cAArB,CAAoCR,QAApC,EAA8CjB,SAA9C,CAAwD;AACtDgB,sBAAI,EAAE,gBAAM;AACV,0BAAI,CAACR,qBAAL,CAA2Be,KAA3B;;AACA,0BAAI,CAACpC,MAAL,CAAYqC,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD;AAJqD,iBAAxD;AAMD;AACF;AACF;AACF;;;mCAEU;AACT,eAAKrC,MAAL,CAAYqC,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD;;;;;;;uBAjHUvC,0B,EAA0B,2H,EAAA,uH,EAAA,+H,EAAA,kJ;AAAA,K;;;YAA1BA,0B;AAA0B,+C;AAAA;AAAA;oEAEvB,8D,EAAiB,I,EAAQ,wD;;;;;;;;;;;;;;AChBzC;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAGI;AAAA,mBAAY,IAAAyC,YAAA,EAAZ;AAA0B,WAA1B;;AAEA;;AACI;;AAC4B;;AAAI;;AAChC;;AACI;;AAUA;;AACI;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAMI;;AACJ;;AACA;;AAA0C;AAAA,mBAAS,IAAAC,QAAA,EAAT;AAAmB,WAAnB;;AACtC;;AACJ;;AACJ;;AACJ;;AAEJ;;AACJ;;AACJ;;AACJ;;;;AA/CY;;AAAA;;AAKI;;AAAA;;AAaY;;AAAA;;AAKA;;AAAA;;AASA;;AAAA,iHAAyC,OAAzC,EAAyC,oGAAzC;;;;;;;;;sEDrBf1C,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACT2C,kBAAQ,EAAE,0BADD;AAETC,qBAAW,EAAE,uCAFJ;AAGTC,mBAAS,EAAE,CAAC,uCAAD;AAHF,S;AAK4B,Q;;;;;;;;;;;;gBAEpC,0D;iBAAa,8D,EAAiB;AAAEC,gBAAI,EAAE;AAAR,W;;;;;;;;;;;;;;;;;;;;AEhBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;QAcaC,yB;AAcX,yCACU9C,EADV,EAEUC,MAFV,EAGUC,cAHV,EAIU6C,cAJV,EAIwC;AAAA;;AAH9B,aAAA/C,EAAA,GAAAA,EAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAA6C,cAAA,GAAAA,cAAA;AAdV,aAAA3C,KAAA,GAAQ,aAAR;AAGA,aAAAC,QAAA,GAAmB,KAAnB;AAGA,aAAAC,cAAA,GAA4C,EAA5C;AAUE,aAAKC,kBAAL,GAA0B;AACxBC,cAAI,EAAE;AACJC,oBAAQ,EAAE,2BADN;AAEJC,qBAAS,EAAE;AAFP,WADkB;AAKxBsC,eAAK,EAAE;AACLvC,oBAAQ,EAAE;AADL;AALiB,SAA1B;AASA,aAAKE,gBAAL,GAAwB,IAAI,qGAAJ,CAAqB,KAAKJ,kBAA1B,CAAxB;AAED;;;;mCAEO;AAAA;;AACN,eAAKK,YAAL,GAAoB,KAAKV,cAAL,CAAoBW,MAApB,CAA2BC,SAA3B,CAClB,UAACD,MAAD,EAAoB;AAClB,kBAAI,CAACE,EAAL,GAAU,CAACF,MAAM,CAAC,IAAD,CAAjB;AACA,kBAAI,CAACR,QAAL,GAAgBQ,MAAM,CAAC,IAAD,CAAN,IAAgB,IAAhC;;AACA,kBAAI,CAACG,QAAL;AACD,WALiB,CAApB,CADM,CAQN;AACA;AACA;AACA;AACA;AACA;AACD;;;0CACc;AAAA;;AACb;AACA;AACA,cAAMC,YAAY,GAAsB,KAAKC,iBAAL,CAAuBC,GAAvB,CAA2B,UAACC,WAAD;AAAA,mBACjE,uDAAUA,WAAW,CAACC,aAAtB,EAAqC,MAArC,CADiE;AAAA,WAA3B,CAAxC,CAHa,CAOb;AACA;;AACA,4EAAM,KAAK4B,oBAAL,CAA0B1B,YAAhC,4BAAiDN,YAAjD,IACGO,IADH,CACQ,oEAAa,IAAb,CADR,EAEGV,SAFH,CAEa,UAACW,KAAD,EAAW;AACpB,kBAAI,CAACnB,cAAL,GAAsB,MAAI,CAACK,gBAAL,CAAsBe,eAAtB,CACpB,MAAI,CAACuB,oBADe,CAAtB;AAGD,WANH;AAOD;;;mCAEkB;AAAA;;AACjB,cAAI,KAAK5C,QAAT,EAAmB;AACjBsB,mBAAO,CAACC,GAAR;AACA,iBAAKmB,cAAL,CAAoBG,cAApB,CAAmC,KAAKnC,EAAxC,EAA4CD,SAA5C,CAAsD;AACpDgB,kBAAI,EAAE,cAAAqB,OAAO,EAAI;AACf,sBAAI,CAACA,OAAL,GAAeA,OAAf;AACA,sBAAI,CAAC/C,KAAL,2BAA8B,MAAI,CAAC+C,OAAL,CAAa3C,IAA3C,EAFe,CAIf;AAEA;AACA;AACA;;AACA,sBAAI,CAACyC,oBAAL,GAA4B,MAAI,CAACjD,EAAL,CAAQgC,KAAR,CAAc;AACxCxB,sBAAI,EAAE,CAAC,MAAI,CAAC2C,OAAL,CAAa3C,IAAd,EAAoB,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWwB,SAAX,CAAqB,CAArB,CAAtB,CAApB,CADkC;AAExCe,uBAAK,EAAE,CAAC,MAAI,CAACG,OAAL,CAAaH,KAAd,EAAqB,CAAC,0DAAWvC,QAAZ,CAArB,CAFiC;AAGxC2C,6BAAW,EAAE,CAAC,MAAI,CAACD,OAAL,CAAaC,WAAd,CAH2B;AAIxCC,8BAAY,EAAE,CAAC,MAAI,CAACF,OAAL,CAAaE,YAAd;AAJ0B,iBAAd,CAA5B;AAMD;AAhBmD,aAAtD;AAkBD,WApBD,MAoBK;AACH;AACA;AACA;AACA,iBAAKjD,KAAL,GAAa,aAAb;AACA,iBAAK6C,oBAAL,GAA4B,KAAKjD,EAAL,CAAQgC,KAAR,CAAc;AACxCxB,kBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWwB,SAAX,CAAqB,CAArB,CAAtB,CAAL,CADkC;AAExCe,mBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWvC,QAAZ,CAAL,CAFiC;AAGxC2C,yBAAW,EAAE,CAAC,EAAD,CAH2B;AAIxCC,0BAAY,EAAE,CAAC,EAAD;AAJ0B,aAAd,CAA5B;AAMD;AACF;;;sCACU;AAAA;;AACT,cAAI,KAAKJ,oBAAL,CAA0Bf,KAA9B,EAAqC;AACnC,gBAAI,KAAKe,oBAAL,CAA0Bd,KAA9B,EAAqC;AACnC,kBAAMgB,OAAO,GAAG,MAAH,OAAG,CAAH,kBAAO,KAAKA,OAAZ,CAAG,EAAqB,KAAKF,oBAAL,CAA0BxB,KAA/C,CAAhB;;AACA,kBAAG,CAAC,KAAKpB,QAAT,EAAkB;AAChB,qBAAK0C,cAAL,CAAoBO,UAApB,CAA+BH,OAA/B,EAAwCrC,SAAxC,CAAkD;AAChDgB,sBAAI,EAAE,gBAAM;AACV,0BAAI,CAACmB,oBAAL,CAA0BZ,KAA1B;;AACA,0BAAI,CAACpC,MAAL,CAAYqC,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;AAJ+C,iBAAlD;AAMD,eAPD,MAOO;AACP,qBAAKS,cAAL,CAAoBQ,aAApB,CAAkCJ,OAAlC,EAA2CrC,SAA3C,CAAqD;AACnDgB,sBAAI,EAAE,gBAAM;AACV,0BAAI,CAACmB,oBAAL,CAA0BZ,KAA1B;;AACA,0BAAI,CAACpC,MAAL,CAAYqC,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;AAJkD,iBAArD;AAMD;AACF;AACF;AACF;;;mCAEU;AACT,eAAKrC,MAAL,CAAYqC,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;;;;;;;uBA7HYQ,yB,EAAyB,2H,EAAA,uH,EAAA,+H,EAAA,gJ;AAAA,K;;;YAAzBA,yB;AAAyB,8C;AAAA;AAAA;oEACtB,8D,EAAiB,I,EAAQ,wD;;;;;;;;;;;;;;ACfzC;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAGI;AAAA,mBAAY,IAAAU,WAAA,EAAZ;AAAyB,WAAzB;;AAEA;;AACI;;AAC4B;;AAAI;;AAChC;;AACI;;AAUA;;AACI;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAC6B;;AAAK;;AAClC;;AACI;;AAUA;;AACI;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACmC;;AAAW;;AAC9C;;AACI;;AAOA;;AAGJ;;AACJ;;AAEA;;AACI;;AACgC;;AAAQ;;AACxC;;AACI;;AAOA;;AAGJ;;AACJ;;AAEA;;AACI;;AACI;;AAMI;;AACJ;;AACA;;AAEI;AAAA,mBAAS,IAAAf,QAAA,EAAT;AAAmB,WAAnB;;AAEA;;AACJ;;AACJ;;AACJ;;AAEJ;;AACJ;;AACJ;;AACJ;;;;AAxGY;;AAAA;;AAKI;;AAAA;;AAaY;;AAAA;;AAKA;;AAAA;;AAeA;;AAAA;;AAKA;;AAAA;;AA2CA;;AAAA,gHAAwC,OAAxC,EAAwC,mGAAxC;;;;;;;;;sED3EfK,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACTJ,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD;AAHF,S;AAK2B,Q;;;;;;;;;;;;gBACnC,0D;iBAAa,8D,EAAiB;AAAEC,gBAAI,EAAE;AAAR,W;;;;;;;;;;;;;;;;;;;;AEfjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,gE,CAaA;;;AACA,QAAMY,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AACYC,eAAS,EAAE,+DADvB;AAEEC,cAAQ,EAAE,CACR;AAAEF,YAAI,EAAE,EAAR;AAAYG,iBAAS,EAAE,MAAvB;AAA+BC,kBAAU,EAAE,uDAAOC,KAAP,CAAaH,QAAb,CAAsBI,YAAtB,CAAmCC;AAA9E,OADQ,EAER;AAAEP,YAAI,EAAE,uDAAOK,KAAP,CAAaH,QAAb,CAAsBI,YAAtB,CAAmCxD,IAA3C;AAAiDmD,iBAAS,EAAE;AAA5D,OAFQ,EAGR;AAAED,YAAI,EAAE,uDAAOK,KAAP,CAAaH,QAAb,CAAsBM,UAAtB,CAAiC1D,IAAzC;AAA+CmD,iBAAS,EAAE;AAA1D,OAHQ,EAIR;AAAED,YAAI,EAAE,uDAAOK,KAAP,CAAaH,QAAb,CAAsBO,WAAtB,CAAkC3D,IAA1C;AAAgDmD,iBAAS,EAAE;AAA3D,OAJQ,EAKR;AAAED,YAAI,EAAE,uDAAOK,KAAP,CAAaH,QAAb,CAAsBQ,cAAtB,CAAqC5D,IAA7C;AAAmDmD,iBAAS,EAAE;AAA9D,OALQ,EAMR;AAAED,YAAI,EAAE,uDAAOK,KAAP,CAAaH,QAAb,CAAsBS,WAAtB,CAAkC7D,IAA1C;AAAgDmD,iBAAS,EAAE;AAA3D,OANQ,EAOR;AAAED,YAAI,EAAE,uDAAOK,KAAP,CAAaH,QAAb,CAAsBU,YAAtB,CAAmC9D,IAA3C;AAAiDmD,iBAAS,EAAE;AAA5D,OAPQ,EAQR;AAAED,YAAI,EAAE,uDAAOK,KAAP,CAAaH,QAAb,CAAsBW,UAAtB,CAAiC/D,IAAzC;AAA+CmD,iBAAS,EAAE;AAA1D,OARQ,EASR;AAAED,YAAI,EAAE,uDAAOK,KAAP,CAAaH,QAAb,CAAsBY,YAAtB,CAAmChE,IAA3C;AAAiDmD,iBAAS,EAAE;AAA5D,OATQ;AAFZ,KADqB,CAAvB;;QAyBac,kB;;;;;YAAAA;;;;yBAAAA,kB;AAAkB,O;AAAA,gBANpB,CACP,4DADO,EAEP,6DAAaC,QAAb,CAAsBjB,MAAtB,CAFO,CAMoB,EAFnB,4DAEmB;;;;0HAAlBgB,kB,EAAkB;AAAA,kBAL3B,4DAK2B,EALf,4DAKe;AALf,kBAGJ,4DAHI;AAKe,O;AAFP,K;;;;;sEAEXA,kB,EAAkB;cAR9B,sDAQ8B;eARrB;AACRE,sBAAY,EAAE,EADN;AAERC,iBAAO,EAAE,CACP,4DADO,EAEP,6DAAaF,QAAb,CAAsBjB,MAAtB,CAFO,CAFD;AAMRoB,iBAAO,EAAE,CAAC,4DAAD;AAND,S;AAQqB,Q;;;;;;;;;;;;;;;;;;ACvC/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;QAOaC,c;AAIX,gCAAc;AAAA;;AAFd,aAAAC,iBAAA,GAA6B,KAA7B;AACA,aAAAC,kBAAA,GAA8B,KAA9B;AACiB;;;;mCAET,CACP;;;sCAEaC,O,EAAsB;AAClC,cAAGA,OAAO,CAACC,SAAR,CAAkBC,QAAlB,CAA2B,WAA3B,CAAH,EAA4C;AAC1CF,mBAAO,CAACG,KAAR,CAAcC,SAAd,GAA0BJ,OAAO,CAACK,YAAR,GAAuB,IAAjD;AACAL,mBAAO,CAACC,SAAR,CAAkBK,MAAlB,CAAyB,WAAzB;AACD,WAHD,MAII;AACFN,mBAAO,CAACG,KAAR,CAAcC,SAAd,GAA0B,KAA1B;AACAJ,mBAAO,CAACC,SAAR,CAAkBM,GAAlB,CAAsB,WAAtB;AACD;AACF;;;;;;;uBAlBUV,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,c;AAAA,2hB;AAAA;AAAA;;;ACP3B;;AACI;;AACI;;AACI;;AAEI;;AACI;;AAGI;AAAA;;AAAA;;AAAS,gBAAAW,aAAA;AAAgC,mBAAF,8CAAE;AAAF,WAAvC;;AAEA;;AACA;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACC;;AACL;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAGI;AAAA;;AAAA;;AAAS,gBAAAA,aAAA;AAAkC,mBAAF,gDAAE;AAAF,WAAzC;;AAEA;;AACA;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACC;;AACL;;AACJ;;AACA;;AACI;;AACI;;AACC;;AACL;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAA8D;;AAAM;;AACxE;;AAEJ;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;;;AA7DwB;;AAAA;;AAI4B;;AAAA;;AAKe;;AAAA;;AAMA;;AAAA;;AAY3C;;AAAA;;AAI4B;;AAAA;;AAKe;;AAAA;;AAMA;;AAAA;;AAUhB;;AAAA;;;;;;;;;sEDrDtCX,c,EAAc;cAL1B,uDAK0B;eALhB;AACTpC,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgCa8C,W;;;;;YAAAA;;;;yBAAAA,W;AAAW,O;AAAA,gBAdb,CACT,4DADS,EAEP,wEAFO,EAGP,kEAHO,EAIP,4DAJO,CAca;;;;0HAAXA,W,EAAW;AAAA,uBAfP,4GAeO,EAfoB,+GAepB,EAfgD,qGAehD,EAf0E,2GAe1E,EAfsG,+FAetG,EAf8H,6FAe9H,EAfqJ,sEAerJ,EAfqK,gEAerK;AAfmL,kBAEzM,4DAFyM,EAGvM,wEAHuM,EAIvM,kEAJuM,EAKvM,4DALuM,CAenL;AAVR,kBAGZ,4GAHY,EAIZ,+GAJY,EAKZ,2GALY,EAMZ,qGANY,EAOZ,gEAPY;AAUQ,O;AAHN,K;;;;;sEAGLA,W,EAAW;cAhBvB,sDAgBuB;eAhBd;AACRf,sBAAY,EAAE,CAAC,4GAAD,EAA4B,+GAA5B,EAAwD,qGAAxD,EAAkF,2GAAlF,EAA8G,+FAA9G,EAAsI,6FAAtI,EAA6J,sEAA7J,EAA6K,gEAA7K,CADN;AAERC,iBAAO,EAAE,CACT,4DADS,EAEP,wEAFO,EAGP,kEAHO,EAIP,4DAJO,CAFD;AAQRC,iBAAO,EAAC,CACN,4GADM,EAEN,+GAFM,EAGN,2GAHM,EAIN,qGAJM,EAKN,gEALM;AARA,S;AAgBc,Q;;;;;;;;;;;;;;;;;;AChCxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACUU;;AACI;;AAAI;;AAAU;;AACd;;AAAI;;AAAY;;AACpB;;;;;;AAHqC;;AAC7B;;AAAA;;AACA;;AAAA;;;;QDHLc,0B;AAGX,0CAAoBxF,eAApB,EAAuD;AAAA;;AAAnC,aAAAA,eAAA,GAAAA,eAAA;AADpB,aAAAyF,UAAA,GAAyB,EAAzB;AAC0D;;;;mCAElD;AAAA;;AACN,eAAKzF,eAAL,CAAqB0F,aAArB,GAAqC/E,SAArC,CAA+C;AAC7CgB,gBAAI,EAAC,cAAAgE,UAAU,EAAI;AACjB,oBAAI,CAACF,UAAL,GAAkBE,UAAlB;AACD;AAH4C,WAA/C;AAKD;;;;;;;uBAXUH,0B,EAA0B,kJ;AAAA,K;;;YAA1BA,0B;AAA0B,6C;AAAA,e;AAAA,a;AAAA,uM;AAAA;AAAA;ACTvC;;AACI;;AACA;;AACI;;AACE;;AAAI;;AAAE;;AACN;;AAAI;;AAAI;;AACV;;AACF;;AAEA;;AACI;;AAIJ;;AAEF;;AACJ;;;;AAPc;;AAAA;;;;;;;;;sEDDDA,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACTjD,kBAAQ,EAAE,wBADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,qCAAD;AAHF,S;AAK4B,Q;;;;;;;;;;;;;;;;;;;;;;AETvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACEM;;;;;;AACgC,mFAAc,YAAd,EAAc,iFAAd;;;;QDOzBmD,sB;AAGX,sCAAoBC,YAApB,EAAwDC,cAAxD,EAAwF;AAAA;;AAApE,aAAAD,YAAA,GAAAA,YAAA;AAAoC,aAAAC,cAAA,GAAAA,cAAA;AAAmC;;;;mCAEnF;AAAA;;AACN,eAAKD,YAAL,CAAkBE,SAAlB,GAA8BpF,SAA9B,CAAwC;AACtCgB,gBAAI,EAAE,cAAAqE,MAAM;AAAA,qBAAI,OAAI,CAACA,MAAL,GAAcA,MAAlB;AAAA;AAD0B,WAAxC;AAIA,eAAKF,cAAL,CAAoBG,aAApB,CAAkCtF,SAAlC,CAA4C,UAACuF,KAAD,EAAe;AACzD,mBAAI,CAACF,MAAL,CAAYG,OAAZ,CAAoBD,KAApB;AACD,WAFD;AAGD;;;;;;;uBAbUN,sB,EAAsB,qI,EAAA,0I;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,c;AAAA,a;AAAA,4R;AAAA;AAAA;ACVnC;;AACE;;AACI;;AAKJ;;AACF;;;;AALU;;AAAA;;;;;;;;;sEDOGA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTrD,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACaU;;AACI;;AAAI;;AAAc;;AAClB;;AAAI;;AAAgB;;AACpB;;AAAI;;;;AAAyC;;AAC7C;;AAAI;;AAAwB;;AAChC;;;;;;AALuC;;AAC/B;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDPL2D,wB;AAIX,wCAAoBxD,cAApB,EAAoD;AAAA;;AAAhC,aAAAA,cAAA,GAAAA,cAAA;AAFpB,aAAAyD,QAAA,GAAsB,EAAtB;AAEuD;;;;mCAE/C;AAAA;;AACN,eAAKC,WAAL,GAAmB,KAAK1D,cAAL,CAAoB2D,kBAApB,GAAyC5F,SAAzC,CAAmD;AACpEgB,gBAAI,EAAE,cAAA0E,QAAQ,EAAI;AAChB,qBAAI,CAACA,QAAL,GAAgBA,QAAhB;AACD;AAHmE,WAAnD,CAAnB;AAKD;;;sCAEU;AACT,eAAKC,WAAL,CAAiBE,WAAjB;AACD;;;;;;;uBAhBUJ,wB,EAAwB,gJ;AAAA,K;;;YAAxBA,wB;AAAwB,2C;AAAA,e;AAAA,a;AAAA,uM;AAAA;AAAA;ACVrC;;AACI;;AACA;;AACI;;AACE;;AAAI;;AAAE;;AACN;;AAAI;;AAAI;;AACR;;AAAI;;AAAK;;AACT;;AAAI;;AAAQ;;AACZ;;AACF;;AACF;;AAEA;;AACI;;AAMJ;;AAEF;;AACJ;;;;AATc;;AAAA;;;;;;;;;;sEDHDA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACT7D,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;AEVrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQagE,c;AAGX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBANUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,kO;AAAA;AAAA;ACR3B;;AACI;;AACI;;AACE;;AAAsB;;AAAmB;;AAC3C;;AACJ;;AACA;;AACI;;AACA;;AACA;;AACJ;;AACJ;;;;AARgC;;AAAA;;;;;;;;sEDKnBA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTlE,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;gBAExB","file":"admin-admin-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChildren, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { FormControlName, FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { GenericValidator } from 'src/app/shared/validators/generic-validator-messages';\r\nimport { Observable, fromEvent, merge, Subscription } from 'rxjs';\r\nimport { debounceTime, catchError } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { Category } from '../../models/category';\r\n\r\n@Component({\r\n  selector: 'app-add-or-edit-category',\r\n  templateUrl: './add-or-edit-category.component.html',\r\n  styleUrls: ['./add-or-edit-category.component.scss']\r\n})\r\nexport class AddOrEditCategoryComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChildren(FormControlName, { read: ElementRef })\r\n  formInputElements: ElementRef[];\r\n\r\n  title = 'Add Category';\r\n  id:number;\r\n  category: Category;\r\n  editMode: boolean = false;\r\n  subscription: Subscription;\r\n\r\n  displayMessage: { [key: string]: string } = {};\r\n  private validationMessages: { [key: string]: { [key: string]: string } };\r\n  private genericValidator: GenericValidator;  // data structutre to store validation error messages\r\n  addOREditCategoryForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private categoryService: CategoryService,\r\n    ) {\r\n    this.validationMessages = {\r\n      name: {\r\n        required: 'Product name is required.',\r\n        minlength: 'Product name can not be less than 3 characters.',\r\n      },\r\n    };\r\n    this.genericValidator = new GenericValidator(this.validationMessages);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.activatedRoute.params.subscribe(\r\n      (params: Params) => {\r\n        this.id = +params['id'];\r\n        this.editMode = params['id'] != null;\r\n        this.initForm();\r\n      }\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Watch for the blur event from any input element on the form.\r\n    // This is required because the valueChanges does not provide notification on blur\r\n    const controlBlurs: Observable<any>[] = this.formInputElements.map((formControl: ElementRef) =>\r\n      fromEvent(formControl.nativeElement, 'blur')\r\n    );\r\n\r\n    // Merge the blur event observable with the valueChanges observable\r\n    // so we only need to subscribe once.\r\n    merge(this.addOREditCategoryForm.valueChanges, ...controlBlurs)\r\n      .pipe(debounceTime(1000))\r\n      .subscribe((value) => {\r\n        this.displayMessage = this.genericValidator.processMessages(\r\n          this.addOREditCategoryForm\r\n        );\r\n      });\r\n  }\r\n\r\n\r\n  private initForm() {\r\n    if (this.editMode) {\r\n      console.log(`form intialization`);\r\n      this.categoryService.getCategoryById(this.id).subscribe({\r\n        next: category => {\r\n          this.category = category;\r\n          this.title = `Edit Category: ${this.category.name}`;\r\n\r\n          //lama 3mlt new formGroup brdo gab nafs error wtf!\r\n\r\n          // this.addOREditCategoryForm = new FormGroup({\r\n          //   name:new FormControl(this.category.name)\r\n          // });\r\n          this.addOREditCategoryForm = this.fb.group({\r\n            name: [this.category.name, [Validators.required, Validators.minLength(3)]]\r\n          });\r\n        }\r\n      });\r\n    }else{\r\n      // this.addOREditCategoryForm = new FormGroup({\r\n      //   name:new FormControl()\r\n      // });\r\n      this.title = 'Add Category';\r\n      this.addOREditCategoryForm = this.fb.group({\r\n        name: ['', [Validators.required, Validators.minLength(3)]]\r\n      });\r\n    }\r\n  }\r\n  saveCategory(): void {\r\n      if (this.addOREditCategoryForm.valid) {\r\n        if (this.addOREditCategoryForm.dirty) {\r\n          const category = {...this.category, ...this.addOREditCategoryForm.value}\r\n          if(!this.editMode){\r\n            this.categoryService.addCategory(category).subscribe({\r\n              next: () => {\r\n                this.addOREditCategoryForm.reset();\r\n                this.router.navigate(['/admin/categories']);\r\n              }\r\n            });\r\n          } else {\r\n          this.categoryService.updateCategory(category).subscribe({\r\n            next: () => {\r\n              this.addOREditCategoryForm.reset();\r\n              this.router.navigate(['/admin/categories']);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.router.navigate(['/admin/categories']);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header\">\r\n            {{title}}\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <form novalidate\r\n                autocomplete=\"off\"\r\n                [formGroup]=\"addOREditCategoryForm\"\r\n                (ngSubmit)=\"saveCategory()\">\r\n    \r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\"\r\n                            for=\"productNameId\">Name</label>\r\n                    <div class=\"col-md-8\">\r\n                        <input \r\n                            class=\"form-control\"\r\n                            id=\"productNameId\"\r\n                            type=\"text\"\r\n                            placeholder=\"Name (required)\"\r\n                            formControlName=\"name\"\r\n                            [class]=\"{\r\n                                'is-invalid': displayMessage.name\r\n                              }\"\r\n                            />\r\n                        <span class=\"invalid-feedback\">\r\n                            {{displayMessage.name}}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4 offset-md-2\">\r\n                        <button \r\n                            class=\"btn bg-green-light text-white mr-4\"\r\n                            [disabled]=\"!addOREditCategoryForm.valid\"\r\n                            type=\"submit\"\r\n                            [title]=\"addOREditCategoryForm.valid ? 'Save your entered data': 'Disabled until the form data is valid' \"\r\n                        >\r\n                            Save\r\n                        </button>\r\n                        <button class=\"btn btn-outline-secondary\" (click)=\"onCancel()\">\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n    \r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChildren, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, MinLengthValidator, FormControlName } from '@angular/forms';\r\nimport { Observable, merge, Subscription, fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { GenericValidator } from 'src/app/shared/validators/generic-validator-messages';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Product } from 'src/app/models/product';\r\n\r\n@Component({\r\n  selector: 'app-add-or-edit-product',\r\n  templateUrl: './add-or-edit-product.component.html',\r\n  styleUrls: ['./add-or-edit-product.component.scss']\r\n})\r\nexport class AddOrEditProductComponent implements OnInit, AfterViewInit {\r\n  @ViewChildren(FormControlName, { read: ElementRef })\r\n  formInputElements: ElementRef[];\r\n\r\n  title = 'Add Product';\r\n  product: Product;\r\n  id:number;\r\n  editMode:boolean = false;\r\n  subscription: Subscription;\r\n\r\n  displayMessage: { [key: string]: string } = {};\r\n  private validationMessages: { [key: string]: { [key: string]: string } };\r\n  private genericValidator: GenericValidator;  // data structutre to store validation error messages\r\n  addOREditProductForm: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private productService: ProductService,\r\n  ) {\r\n    this.validationMessages = {\r\n      name: {\r\n        required: 'Product name is required.',\r\n        minlength: 'Product name can not be less than 3 characters.',\r\n      },\r\n      price: {\r\n        required: 'Price is required'\r\n      },\r\n    };\r\n    this.genericValidator = new GenericValidator(this.validationMessages);\r\n    \r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    this.subscription = this.activatedRoute.params.subscribe(\r\n      (params: Params) => {\r\n        this.id = +params['id'];\r\n        this.editMode = params['id'] != null;\r\n        this.initForm();\r\n      }\r\n    );\r\n    // this.addOREditProductForm = this.fb.group({\r\n    //   name: ['', [Validators.required, Validators.minLength(3)]],\r\n    //   price: ['', [Validators.required]],\r\n    //   description: [''],\r\n    //   categoryName: ['']\r\n    // });\r\n  }\r\n  ngAfterViewInit(): void {\r\n    // Watch for the blur event from any input element on the form.\r\n    // This is required because the valueChanges does not provide notification on blur\r\n    const controlBlurs: Observable<any>[] = this.formInputElements.map((formControl: ElementRef) =>\r\n      fromEvent(formControl.nativeElement, 'blur')\r\n    );\r\n\r\n    // Merge the blur event observable with the valueChanges observable\r\n    // so we only need to subscribe once.\r\n    merge(this.addOREditProductForm.valueChanges, ...controlBlurs)\r\n      .pipe(debounceTime(1000))\r\n      .subscribe((value) => {\r\n        this.displayMessage = this.genericValidator.processMessages(\r\n          this.addOREditProductForm\r\n        );\r\n      });\r\n  }\r\n\r\n  private initForm() {\r\n    if (this.editMode) {\r\n      console.log(`form intialization`);\r\n      this.productService.getProductById(this.id).subscribe({\r\n        next: product => {\r\n          this.product = product;\r\n          this.title = `Edit Product: ${this.product.name}`;\r\n\r\n          //lama 3mlt new formGroup brdo gab nafs error wtf!\r\n\r\n          // this.addOREditCategoryForm = new FormGroup({\r\n          //   name:new FormControl(this.category.name)\r\n          // });\r\n          this.addOREditProductForm = this.fb.group({\r\n            name: [this.product.name, [Validators.required, Validators.minLength(3)]],\r\n            price: [this.product.price, [Validators.required]],\r\n            description: [this.product.description],\r\n            categoryName: [this.product.categoryName]\r\n          });\r\n        }\r\n      });\r\n    }else{\r\n      // this.addOREditCategoryForm = new FormGroup({\r\n      //   name:new FormControl()\r\n      // });\r\n      this.title = 'Add Product';\r\n      this.addOREditProductForm = this.fb.group({\r\n        name: ['', [Validators.required, Validators.minLength(3)]],\r\n        price: ['', [Validators.required]],\r\n        description: [''],\r\n        categoryName: ['']\r\n      });\r\n    }\r\n  }\r\n  saveProduct(): void {\r\n    if (this.addOREditProductForm.valid) {\r\n      if (this.addOREditProductForm.dirty) {\r\n        const product = {...this.product, ...this.addOREditProductForm.value}\r\n        if(!this.editMode){\r\n          this.productService.addProduct(product).subscribe({\r\n            next: () => {\r\n              this.addOREditProductForm.reset();\r\n              this.router.navigate(['admin/products']);\r\n            }\r\n          });\r\n        } else {\r\n        this.productService.updateProduct(product).subscribe({\r\n          next: () => {\r\n            this.addOREditProductForm.reset();\r\n            this.router.navigate(['admin/products']);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nonCancel() {\r\n  this.router.navigate(['admin/products']);\r\n}\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header\">\r\n            {{title}}\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <form novalidate\r\n                autocomplete=\"off\"\r\n                [formGroup]=\"addOREditProductForm\"\r\n                (ngSubmit)=\"saveProduct()\">\r\n    \r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\"\r\n                            for=\"productNameId\">Name</label>\r\n                    <div class=\"col-md-8\">\r\n                        <input \r\n                            class=\"form-control\"\r\n                            id=\"productNameId\"\r\n                            type=\"text\"\r\n                            placeholder=\"Name (required)\"\r\n                            formControlName=\"name\"\r\n                            [class]=\"{\r\n                                'is-invalid': displayMessage.name\r\n                              }\"\r\n                            />\r\n                        <span class=\"invalid-feedback\">\r\n                            {{displayMessage.name}}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n    \r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\"\r\n                            for=\"productPriceId\">Price</label>\r\n                    <div class=\"col-md-8\">\r\n                        <input \r\n                            class=\"form-control\"\r\n                            id=\"productPriceId\"\r\n                            type=\"text\"\r\n                            placeholder=\"Price (required)\"\r\n                            formControlName=\"price\"\r\n                            [class]=\"{\r\n                                'is-invalid': displayMessage.price\r\n                              }\"\r\n                            />\r\n                        <span class=\"invalid-feedback\">\r\n                            {{displayMessage.price}}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\"\r\n                            for=\"productDescriptionId\">Description</label>\r\n                    <div class=\"col-md-8\">\r\n                        <input \r\n                            class=\"form-control\"\r\n                            id=\"productDescriptionId\"\r\n                            type=\"text\"\r\n                            placeholder=\"Description\"\r\n                            formControlName=\"description\"\r\n                            />\r\n                        <span class=\"invalid-feedback\">\r\n                        \r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\"\r\n                            for=\"productCategoryId\">Category</label>\r\n                    <div class=\"col-md-8\">\r\n                        <input \r\n                            class=\"form-control\"\r\n                            id=\"productCategoryId\"\r\n                            type=\"text\"\r\n                            placeholder=\"Category\"\r\n                            formControlName=\"categoryName\"\r\n                            />\r\n                        <span class=\"invalid-feedback\">\r\n                        \r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4 offset-md-2\">\r\n                        <button \r\n                            class=\"btn bg-green-light text-white mr-4\"\r\n                            [disabled]=\"!addOREditProductForm.valid\"\r\n                            type=\"submit\"\r\n                            [title]=\"addOREditProductForm.valid ? 'Save your entered data': 'Disabled until the form data is valid' \"\r\n                        >\r\n                            Save\r\n                        </button>\r\n                        <button \r\n                            class=\"btn btn-outline-secondary\"\r\n                            (click)=\"onCancel()\"\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n    \r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CONFIG } from '../shared/configs';\r\nimport { AdminComponent } from './admin.component';\r\nimport { ListingProductsComponent } from './listing-products/listing-products.component';\r\nimport { AddOrEditProductComponent } from './add-or-edit-product/add-or-edit-product.component';\r\nimport { ListingCategoriesComponent } from './listing-categories/listing-categories.component';\r\nimport { AddOrEditCategoryComponent } from './add-or-edit-category/add-or-edit-category.component';\r\nimport { ListingOrdersComponent } from './listing-orders/listing-orders.component';\r\nimport { OrderDetailsComponent } from './order-details/order-details.component';\r\n\r\n/// add the isAdminAuthorized guard before every route\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: AdminComponent,\r\n    children: [\r\n      { path: '', pathMatch: 'full', redirectTo: CONFIG.admin.children.productsList.route },\r\n      { path: CONFIG.admin.children.productsList.name, component: ListingProductsComponent },\r\n      { path: CONFIG.admin.children.newProduct.name, component: AddOrEditProductComponent },\r\n      { path: CONFIG.admin.children.editProduct.name, component: AddOrEditProductComponent },\r\n      { path: CONFIG.admin.children.categoriesList.name, component: ListingCategoriesComponent },\r\n      { path: CONFIG.admin.children.newCategory.name, component: AddOrEditCategoryComponent },\r\n      { path: CONFIG.admin.children.editCategory.name, component: AddOrEditCategoryComponent },\r\n      { path: CONFIG.admin.children.ordersList.name, component: ListingOrdersComponent },\r\n      { path: CONFIG.admin.children.orderDetails.name, component: OrderDetailsComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  productMenuStatus: boolean = false;\r\n  categoryMenuStatus: boolean = false;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggleSubMenu(subMenu: HTMLElement) {\r\n    if(subMenu.classList.contains('collapsed')) {\r\n      subMenu.style.maxHeight = subMenu.scrollHeight + 'px';\r\n      subMenu.classList.remove(\"collapsed\");\r\n    }\r\n    else{\r\n      subMenu.style.maxHeight = '0px';\r\n      subMenu.classList.add(\"collapsed\");\r\n    }\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-2 p-4 side-bar\">\r\n            <ul class=\"nav flex-column\">\r\n\r\n                <li class=\"nav-item p-2\">\r\n                    <a\r\n                        class=\"nav-link text-light\"\r\n                        [routerLink]=\"['/admin/products']\"\r\n                        (click)=\"toggleSubMenu(productsSubMenu); productMenuStatus = !productMenuStatus\"\r\n                        >\r\n                        Products\r\n                        <i class=\"fa fa-caret-down\" [ngClass]=\"productMenuStatus ? 'fa-caret-up' : 'fa-caret-down'\"></i>\r\n                    </a>\r\n                    <div class=\"sub-link collapsed\" #productsSubMenu>\r\n                        <ul class=\"flex-column pl-2 nav\">\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link text-light p-2\" [routerLink]=\"['/admin/products/new']\">\r\n                                    <i class=\"fa fa-plus\"></i>\r\n                                     Add Product\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link text-light p-2\" [routerLink]=\"'/admin/products'\">\r\n                                    <i class=\"fa fa-list-ul\"></i> \r\n                                    List Product\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n\r\n                <li class=\"nav-item p-2\">\r\n                    <a\r\n                        class=\"nav-link text-light\"\r\n                        [routerLink]=\"['/admin/categories']\"\r\n                        (click)=\"toggleSubMenu(categoriesSubMenu); categoryMenuStatus = !categoryMenuStatus\"\r\n                        >\r\n                        Categories \r\n                        <i class=\"fa fa-caret-down\" [ngClass]=\"categoryMenuStatus ? 'fa-caret-up' : 'fa-caret-down'\"></i>\r\n                    </a>\r\n                    <div class=\"sub-link collapsed\" #categoriesSubMenu>\r\n                        <ul class=\"flex-column pl-2 nav\">\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link text-light p-2\" [routerLink]=\"['/admin/categories/new']\">\r\n                                    <i class=\"fa fa-plus\"></i>\r\n                                     Add Category\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link text-light p-2\" [routerLink]=\"'/admin/categories'\">\r\n                                    <i class=\"fa fa-list-ul\"></i>\r\n                                     List Category\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n        \r\n                <li class=\"nav-item p-2\">\r\n                    <a class=\"nav-link text-light\" [routerLink]=\"'/admin/orders'\">Orders</a>\r\n                </li>\r\n\r\n            </ul>\r\n        </div>\r\n        <div class=\"col-10 p-4\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddOrEditProductComponent } from './add-or-edit-product/add-or-edit-product.component';\r\nimport { AddOrEditCategoryComponent } from './add-or-edit-category/add-or-edit-category.component';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ListingProductsComponent } from './listing-products/listing-products.component';\r\nimport { ListingCategoriesComponent } from './listing-categories/listing-categories.component';\r\nimport { ListingOrdersComponent } from './listing-orders/listing-orders.component';\r\nimport { OrderDetailsComponent } from './order-details/order-details.component';\r\nimport { OrderComponent } from './order/order.component';\r\nimport { AdminComponent } from './admin.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddOrEditProductComponent, AddOrEditCategoryComponent, ListingProductsComponent, ListingCategoriesComponent, ListingOrdersComponent, OrderDetailsComponent, OrderComponent, AdminComponent],\r\n  imports: [\r\n  CommonModule,\r\n    AdminRoutingModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  exports:[\r\n    AddOrEditProductComponent,\r\n    AddOrEditCategoryComponent,\r\n    ListingCategoriesComponent,\r\n    ListingProductsComponent,\r\n    AdminComponent\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Category } from './../../models/category';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-listing-categories',\r\n  templateUrl: './listing-categories.component.html',\r\n  styleUrls: ['./listing-categories.component.scss']\r\n})\r\nexport class ListingCategoriesComponent implements OnInit {\r\n\r\n  Categories: Category[] = [];\r\n  constructor(private categoryService : CategoryService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.categoryService.getCategories().subscribe({\r\n      next:categories => {\r\n        this.Categories = categories;\r\n      },\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"table-responsive\">\r\n    <table class=\"table table-hover table-striped\">\r\n    <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Name</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n          <tr *ngFor = \"let cat of Categories\" [routerLink]=\"['/admin/categories',cat.id,'edit']\" style=\"cursor: pointer;\">\r\n              <td>{{cat.id}}</td>\r\n              <td>{{cat.name}}</td>\r\n          </tr>\r\n      </tbody>\r\n    \r\n    </table>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Order } from './../../models/order';\r\nimport { OrderService } from './../../services/order.service';\r\nimport { SignalRService } from './../../services/signal-r.service';\r\n\r\n@Component({\r\n  selector: 'app-listing-orders',\r\n  templateUrl: './listing-orders.component.html',\r\n  styleUrls: ['./listing-orders.component.scss']\r\n})\r\nexport class ListingOrdersComponent implements OnInit {\r\n\r\n  orders: Order[];\r\n  constructor(private orderService: OrderService, private signalRService: SignalRService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.orderService.getOrders().subscribe({\r\n      next: orders => this.orders = orders\r\n    });\r\n\r\n    this.signalRService.orderReceived.subscribe((order:any) => {\r\n      this.orders.unshift(order)\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"d-flex flex-wrap\">\r\n      <app-order \r\n          *ngFor=\"let item of orders\" [order]=\"item\"\r\n          style=\"cursor: pointer;\"\r\n          [routerLink]=\"['/admin','orders',item.id]\"\r\n          class=\"d-flex justify-content-center p-3\"></app-order>\r\n  </div>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Product } from './../../models/product';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-listing-products',\r\n  templateUrl: './listing-products.component.html',\r\n  styleUrls: ['./listing-products.component.scss']\r\n})\r\nexport class ListingProductsComponent implements OnInit, OnDestroy {\r\n\r\n  products: Product[] = [];\r\n  productsSub: Subscription;\r\n  constructor(private productService: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.productsSub = this.productService.getProductsSubject().subscribe({\r\n      next: products => {\r\n        this.products = products;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.productsSub.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"table-responsive\">\r\n    <table class=\"table table-hover table-striped\">\r\n    <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Name</th>\r\n          <th>Price</th>\r\n          <th>Category</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n          <tr *ngFor = \"let product of products\" [routerLink]=\"['/admin/products',product.id,'edit']\" style=\"cursor: pointer;\">\r\n              <td>{{product.id}}</td>\r\n              <td>{{product.name}}</td>\r\n              <td>{{product.price|currency:\"EGP\":\"symbol\"}}</td>\r\n              <td>{{product.categoryName}}</td>\r\n          </tr>\r\n      </tbody>\r\n    \r\n    </table>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Order } from './../../models/order';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.scss']\r\n})\r\nexport class OrderComponent implements OnInit {\r\n\r\n  @Input() order: Order\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"order\">\r\n    <div class=\"card border-success text-center\">\r\n        <div class=\"card-body text-success\">\r\n          <h5 class=\"card-text\">Order #{{order.id}}</h5>\r\n        </div>\r\n    </div>\r\n    <div class=\"text-center text-black-50 \">\r\n        Details .. \r\n        <i class=\"fa fa-chevron-right font-sm font-weight-light\"></i>\r\n        <i class=\"fa fa-chevron-right font-sm font-weight-light\"></i>\r\n    </div>\r\n</div>"]}