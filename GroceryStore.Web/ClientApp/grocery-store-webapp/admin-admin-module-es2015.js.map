{"version":3,"sources":["./src/app/admin/add-or-edit-category/add-or-edit-category.component.ts","./src/app/admin/add-or-edit-category/add-or-edit-category.component.html","./src/app/admin/add-or-edit-product/add-or-edit-product.component.ts","./src/app/admin/add-or-edit-product/add-or-edit-product.component.html","./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/admin/admin.module.ts","./src/app/admin/listing-categories/listing-categories.component.ts","./src/app/admin/listing-categories/listing-categories.component.html","./src/app/admin/listing-orders/listing-orders.component.ts","./src/app/admin/listing-orders/listing-orders.component.html","./src/app/admin/listing-products/listing-products.component.ts","./src/app/admin/listing-products/listing-products.component.html","./src/app/admin/order/order.component.ts","./src/app/admin/order/order.component.html"],"names":[],"mappings":"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","file":"admin-admin-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChildren, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { FormControlName, FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { GenericValidator } from 'src/app/shared/validators/generic-validator-messages';\r\nimport { Observable, fromEvent, merge, Subscription } from 'rxjs';\r\nimport { debounceTime, catchError } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\nimport { Category } from '../../models/category';\r\n\r\n@Component({\r\n  selector: 'app-add-or-edit-category',\r\n  templateUrl: './add-or-edit-category.component.html',\r\n  styleUrls: ['./add-or-edit-category.component.scss']\r\n})\r\nexport class AddOrEditCategoryComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChildren(FormControlName, { read: ElementRef })\r\n  formInputElements: ElementRef[];\r\n\r\n  title = 'Add Category';\r\n  id:number;\r\n  category: Category;\r\n  editMode: boolean = false;\r\n  subscription: Subscription;\r\n\r\n  displayMessage: { [key: string]: string } = {};\r\n  private validationMessages: { [key: string]: { [key: string]: string } };\r\n  private genericValidator: GenericValidator;  // data structutre to store validation error messages\r\n  addOREditCategoryForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private categoryService: CategoryService,\r\n    ) {\r\n    this.validationMessages = {\r\n      name: {\r\n        required: 'Product name is required.',\r\n        minlength: 'Product name can not be less than 3 characters.',\r\n      },\r\n    };\r\n    this.genericValidator = new GenericValidator(this.validationMessages);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription = this.activatedRoute.params.subscribe(\r\n      (params: Params) => {\r\n        this.id = +params['id'];\r\n        this.editMode = params['id'] != null;\r\n        this.initForm();\r\n      }\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Watch for the blur event from any input element on the form.\r\n    // This is required because the valueChanges does not provide notification on blur\r\n    const controlBlurs: Observable<any>[] = this.formInputElements.map((formControl: ElementRef) =>\r\n      fromEvent(formControl.nativeElement, 'blur')\r\n    );\r\n\r\n    // Merge the blur event observable with the valueChanges observable\r\n    // so we only need to subscribe once.\r\n    merge(this.addOREditCategoryForm.valueChanges, ...controlBlurs)\r\n      .pipe(debounceTime(1000))\r\n      .subscribe((value) => {\r\n        this.displayMessage = this.genericValidator.processMessages(\r\n          this.addOREditCategoryForm\r\n        );\r\n      });\r\n  }\r\n\r\n\r\n  private initForm() {\r\n    if (this.editMode) {\r\n      console.log(`form intialization`);\r\n      this.categoryService.getCategoryById(this.id).subscribe({\r\n        next: category => {\r\n          this.category = category;\r\n          this.title = `Edit Category: ${this.category.name}`;\r\n\r\n          //lama 3mlt new formGroup brdo gab nafs error wtf!\r\n\r\n          // this.addOREditCategoryForm = new FormGroup({\r\n          //   name:new FormControl(this.category.name)\r\n          // });\r\n          this.addOREditCategoryForm = this.fb.group({\r\n            name: [this.category.name, [Validators.required, Validators.minLength(3)]]\r\n          });\r\n        }\r\n      });\r\n    }else{\r\n      // this.addOREditCategoryForm = new FormGroup({\r\n      //   name:new FormControl()\r\n      // });\r\n      this.title = 'Add Category';\r\n      this.addOREditCategoryForm = this.fb.group({\r\n        name: ['', [Validators.required, Validators.minLength(3)]]\r\n      });\r\n    }\r\n  }\r\n  saveCategory(): void {\r\n      if (this.addOREditCategoryForm.valid) {\r\n        if (this.addOREditCategoryForm.dirty) {\r\n          const category = {...this.category, ...this.addOREditCategoryForm.value}\r\n          if(!this.editMode){\r\n            this.categoryService.addCategory(category).subscribe({\r\n              next: () => {\r\n                this.addOREditCategoryForm.reset();\r\n                this.router.navigate(['/admin/categories']);\r\n              }\r\n            });\r\n          } else {\r\n          this.categoryService.updateCategory(category).subscribe({\r\n            next: () => {\r\n              this.addOREditCategoryForm.reset();\r\n              this.router.navigate(['/admin/categories']);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.router.navigate(['/admin/categories']);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header\">\r\n            {{title}}\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <form novalidate\r\n                autocomplete=\"off\"\r\n                [formGroup]=\"addOREditCategoryForm\"\r\n                (ngSubmit)=\"saveCategory()\">\r\n    \r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\"\r\n                            for=\"productNameId\">Name</label>\r\n                    <div class=\"col-md-8\">\r\n                        <input \r\n                            class=\"form-control\"\r\n                            id=\"productNameId\"\r\n                            type=\"text\"\r\n                            placeholder=\"Name (required)\"\r\n                            formControlName=\"name\"\r\n                            [class]=\"{\r\n                                'is-invalid': displayMessage.name\r\n                              }\"\r\n                            />\r\n                        <span class=\"invalid-feedback\">\r\n                            {{displayMessage.name}}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4 offset-md-2\">\r\n                        <button \r\n                            class=\"btn bg-green-light text-white mr-4\"\r\n                            [disabled]=\"!addOREditCategoryForm.valid\"\r\n                            type=\"submit\"\r\n                            [title]=\"addOREditCategoryForm.valid ? 'Save your entered data': 'Disabled until the form data is valid' \"\r\n                        >\r\n                            Save\r\n                        </button>\r\n                        <button class=\"btn btn-outline-secondary\" (click)=\"onCancel()\">\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n    \r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChildren, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, MinLengthValidator, FormControlName } from '@angular/forms';\r\nimport { Observable, merge, Subscription, fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { GenericValidator } from 'src/app/shared/validators/generic-validator-messages';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Product } from 'src/app/models/product';\r\n\r\n@Component({\r\n  selector: 'app-add-or-edit-product',\r\n  templateUrl: './add-or-edit-product.component.html',\r\n  styleUrls: ['./add-or-edit-product.component.scss']\r\n})\r\nexport class AddOrEditProductComponent implements OnInit, AfterViewInit {\r\n  @ViewChildren(FormControlName, { read: ElementRef })\r\n  formInputElements: ElementRef[];\r\n\r\n  title = 'Add Product';\r\n  product: Product;\r\n  id:number;\r\n  editMode:boolean = false;\r\n  subscription: Subscription;\r\n\r\n  displayMessage: { [key: string]: string } = {};\r\n  private validationMessages: { [key: string]: { [key: string]: string } };\r\n  private genericValidator: GenericValidator;  // data structutre to store validation error messages\r\n  addOREditProductForm: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private productService: ProductService,\r\n  ) {\r\n    this.validationMessages = {\r\n      name: {\r\n        required: 'Product name is required.',\r\n        minlength: 'Product name can not be less than 3 characters.',\r\n      },\r\n      price: {\r\n        required: 'Price is required'\r\n      },\r\n    };\r\n    this.genericValidator = new GenericValidator(this.validationMessages);\r\n    \r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    this.subscription = this.activatedRoute.params.subscribe(\r\n      (params: Params) => {\r\n        this.id = +params['id'];\r\n        this.editMode = params['id'] != null;\r\n        this.initForm();\r\n      }\r\n    );\r\n    // this.addOREditProductForm = this.fb.group({\r\n    //   name: ['', [Validators.required, Validators.minLength(3)]],\r\n    //   price: ['', [Validators.required]],\r\n    //   description: [''],\r\n    //   categoryName: ['']\r\n    // });\r\n  }\r\n  ngAfterViewInit(): void {\r\n    // Watch for the blur event from any input element on the form.\r\n    // This is required because the valueChanges does not provide notification on blur\r\n    const controlBlurs: Observable<any>[] = this.formInputElements.map((formControl: ElementRef) =>\r\n      fromEvent(formControl.nativeElement, 'blur')\r\n    );\r\n\r\n    // Merge the blur event observable with the valueChanges observable\r\n    // so we only need to subscribe once.\r\n    merge(this.addOREditProductForm.valueChanges, ...controlBlurs)\r\n      .pipe(debounceTime(1000))\r\n      .subscribe((value) => {\r\n        this.displayMessage = this.genericValidator.processMessages(\r\n          this.addOREditProductForm\r\n        );\r\n      });\r\n  }\r\n\r\n  private initForm() {\r\n    if (this.editMode) {\r\n      console.log(`form intialization`);\r\n      this.productService.getProductById(this.id).subscribe({\r\n        next: product => {\r\n          this.product = product;\r\n          this.title = `Edit Product: ${this.product.name}`;\r\n\r\n          //lama 3mlt new formGroup brdo gab nafs error wtf!\r\n\r\n          // this.addOREditCategoryForm = new FormGroup({\r\n          //   name:new FormControl(this.category.name)\r\n          // });\r\n          this.addOREditProductForm = this.fb.group({\r\n            name: [this.product.name, [Validators.required, Validators.minLength(3)]],\r\n            price: [this.product.price, [Validators.required]],\r\n            description: [this.product.description],\r\n            categoryName: [this.product.categoryName]\r\n          });\r\n        }\r\n      });\r\n    }else{\r\n      // this.addOREditCategoryForm = new FormGroup({\r\n      //   name:new FormControl()\r\n      // });\r\n      this.title = 'Add Product';\r\n      this.addOREditProductForm = this.fb.group({\r\n        name: ['', [Validators.required, Validators.minLength(3)]],\r\n        price: ['', [Validators.required]],\r\n        description: [''],\r\n        categoryName: ['']\r\n      });\r\n    }\r\n  }\r\n  saveProduct(): void {\r\n    if (this.addOREditProductForm.valid) {\r\n      if (this.addOREditProductForm.dirty) {\r\n        const product = {...this.product, ...this.addOREditProductForm.value}\r\n        if(!this.editMode){\r\n          this.productService.addProduct(product).subscribe({\r\n            next: () => {\r\n              this.addOREditProductForm.reset();\r\n              this.router.navigate(['admin/products']);\r\n            }\r\n          });\r\n        } else {\r\n        this.productService.updateProduct(product).subscribe({\r\n          next: () => {\r\n            this.addOREditProductForm.reset();\r\n            this.router.navigate(['admin/products']);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nonCancel() {\r\n  this.router.navigate(['admin/products']);\r\n}\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header\">\r\n            {{title}}\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <form novalidate\r\n                autocomplete=\"off\"\r\n                [formGroup]=\"addOREditProductForm\"\r\n                (ngSubmit)=\"saveProduct()\">\r\n    \r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\"\r\n                            for=\"productNameId\">Name</label>\r\n                    <div class=\"col-md-8\">\r\n                        <input \r\n                            class=\"form-control\"\r\n                            id=\"productNameId\"\r\n                            type=\"text\"\r\n                            placeholder=\"Name (required)\"\r\n                            formControlName=\"name\"\r\n                            [class]=\"{\r\n                                'is-invalid': displayMessage.name\r\n                              }\"\r\n                            />\r\n                        <span class=\"invalid-feedback\">\r\n                            {{displayMessage.name}}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n    \r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\"\r\n                            for=\"productPriceId\">Price</label>\r\n                    <div class=\"col-md-8\">\r\n                        <input \r\n                            class=\"form-control\"\r\n                            id=\"productPriceId\"\r\n                            type=\"text\"\r\n                            placeholder=\"Price (required)\"\r\n                            formControlName=\"price\"\r\n                            [class]=\"{\r\n                                'is-invalid': displayMessage.price\r\n                              }\"\r\n                            />\r\n                        <span class=\"invalid-feedback\">\r\n                            {{displayMessage.price}}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\"\r\n                            for=\"productDescriptionId\">Description</label>\r\n                    <div class=\"col-md-8\">\r\n                        <input \r\n                            class=\"form-control\"\r\n                            id=\"productDescriptionId\"\r\n                            type=\"text\"\r\n                            placeholder=\"Description\"\r\n                            formControlName=\"description\"\r\n                            />\r\n                        <span class=\"invalid-feedback\">\r\n                        \r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group row\">\r\n                    <label class=\"col-md-2 col-form-label\"\r\n                            for=\"productCategoryId\">Category</label>\r\n                    <div class=\"col-md-8\">\r\n                        <input \r\n                            class=\"form-control\"\r\n                            id=\"productCategoryId\"\r\n                            type=\"text\"\r\n                            placeholder=\"Category\"\r\n                            formControlName=\"categoryName\"\r\n                            />\r\n                        <span class=\"invalid-feedback\">\r\n                        \r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4 offset-md-2\">\r\n                        <button \r\n                            class=\"btn bg-green-light text-white mr-4\"\r\n                            [disabled]=\"!addOREditProductForm.valid\"\r\n                            type=\"submit\"\r\n                            [title]=\"addOREditProductForm.valid ? 'Save your entered data': 'Disabled until the form data is valid' \"\r\n                        >\r\n                            Save\r\n                        </button>\r\n                        <button \r\n                            class=\"btn btn-outline-secondary\"\r\n                            (click)=\"onCancel()\"\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n    \r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CONFIG } from '../shared/configs';\r\nimport { AdminComponent } from './admin.component';\r\nimport { ListingProductsComponent } from './listing-products/listing-products.component';\r\nimport { AddOrEditProductComponent } from './add-or-edit-product/add-or-edit-product.component';\r\nimport { ListingCategoriesComponent } from './listing-categories/listing-categories.component';\r\nimport { AddOrEditCategoryComponent } from './add-or-edit-category/add-or-edit-category.component';\r\nimport { ListingOrdersComponent } from './listing-orders/listing-orders.component';\r\nimport { OrderDetailsComponent } from './order-details/order-details.component';\r\n\r\n/// add the isAdminAuthorized guard before every route\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: AdminComponent,\r\n    children: [\r\n      { path: '', pathMatch: 'full', redirectTo: CONFIG.admin.children.productsList.route },\r\n      { path: CONFIG.admin.children.productsList.name, component: ListingProductsComponent },\r\n      { path: CONFIG.admin.children.newProduct.name, component: AddOrEditProductComponent },\r\n      { path: CONFIG.admin.children.editProduct.name, component: AddOrEditProductComponent },\r\n      { path: CONFIG.admin.children.categoriesList.name, component: ListingCategoriesComponent },\r\n      { path: CONFIG.admin.children.newCategory.name, component: AddOrEditCategoryComponent },\r\n      { path: CONFIG.admin.children.editCategory.name, component: AddOrEditCategoryComponent },\r\n      { path: CONFIG.admin.children.ordersList.name, component: ListingOrdersComponent },\r\n      { path: CONFIG.admin.children.orderDetails.name, component: OrderDetailsComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  productMenuStatus: boolean = false;\r\n  categoryMenuStatus: boolean = false;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggleSubMenu(subMenu: HTMLElement) {\r\n    if(subMenu.classList.contains('collapsed')) {\r\n      subMenu.style.maxHeight = subMenu.scrollHeight + 'px';\r\n      subMenu.classList.remove(\"collapsed\");\r\n    }\r\n    else{\r\n      subMenu.style.maxHeight = '0px';\r\n      subMenu.classList.add(\"collapsed\");\r\n    }\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-2 p-4 side-bar\">\r\n            <ul class=\"nav flex-column\">\r\n\r\n                <li class=\"nav-item p-2\">\r\n                    <a\r\n                        class=\"nav-link text-light\"\r\n                        [routerLink]=\"['/admin/products']\"\r\n                        (click)=\"toggleSubMenu(productsSubMenu); productMenuStatus = !productMenuStatus\"\r\n                        >\r\n                        Products\r\n                        <i class=\"fa fa-caret-down\" [ngClass]=\"productMenuStatus ? 'fa-caret-up' : 'fa-caret-down'\"></i>\r\n                    </a>\r\n                    <div class=\"sub-link collapsed\" #productsSubMenu>\r\n                        <ul class=\"flex-column pl-2 nav\">\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link text-light p-2\" [routerLink]=\"['/admin/products/new']\">\r\n                                    <i class=\"fa fa-plus\"></i>\r\n                                     Add Product\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link text-light p-2\" [routerLink]=\"'/admin/products'\">\r\n                                    <i class=\"fa fa-list-ul\"></i> \r\n                                    List Product\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n\r\n                <li class=\"nav-item p-2\">\r\n                    <a\r\n                        class=\"nav-link text-light\"\r\n                        [routerLink]=\"['/admin/categories']\"\r\n                        (click)=\"toggleSubMenu(categoriesSubMenu); categoryMenuStatus = !categoryMenuStatus\"\r\n                        >\r\n                        Categories \r\n                        <i class=\"fa fa-caret-down\" [ngClass]=\"categoryMenuStatus ? 'fa-caret-up' : 'fa-caret-down'\"></i>\r\n                    </a>\r\n                    <div class=\"sub-link collapsed\" #categoriesSubMenu>\r\n                        <ul class=\"flex-column pl-2 nav\">\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link text-light p-2\" [routerLink]=\"['/admin/categories/new']\">\r\n                                    <i class=\"fa fa-plus\"></i>\r\n                                     Add Category\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link text-light p-2\" [routerLink]=\"'/admin/categories'\">\r\n                                    <i class=\"fa fa-list-ul\"></i>\r\n                                     List Category\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n        \r\n                <li class=\"nav-item p-2\">\r\n                    <a class=\"nav-link text-light\" [routerLink]=\"'/admin/orders'\">Orders</a>\r\n                </li>\r\n\r\n            </ul>\r\n        </div>\r\n        <div class=\"col-10 p-4\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddOrEditProductComponent } from './add-or-edit-product/add-or-edit-product.component';\r\nimport { AddOrEditCategoryComponent } from './add-or-edit-category/add-or-edit-category.component';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ListingProductsComponent } from './listing-products/listing-products.component';\r\nimport { ListingCategoriesComponent } from './listing-categories/listing-categories.component';\r\nimport { ListingOrdersComponent } from './listing-orders/listing-orders.component';\r\nimport { OrderDetailsComponent } from './order-details/order-details.component';\r\nimport { OrderComponent } from './order/order.component';\r\nimport { AdminComponent } from './admin.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddOrEditProductComponent, AddOrEditCategoryComponent, ListingProductsComponent, ListingCategoriesComponent, ListingOrdersComponent, OrderDetailsComponent, OrderComponent, AdminComponent],\r\n  imports: [\r\n  CommonModule,\r\n    AdminRoutingModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  exports:[\r\n    AddOrEditProductComponent,\r\n    AddOrEditCategoryComponent,\r\n    ListingCategoriesComponent,\r\n    ListingProductsComponent,\r\n    AdminComponent\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Category } from './../../models/category';\r\nimport { CategoryService } from 'src/app/services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-listing-categories',\r\n  templateUrl: './listing-categories.component.html',\r\n  styleUrls: ['./listing-categories.component.scss']\r\n})\r\nexport class ListingCategoriesComponent implements OnInit {\r\n\r\n  Categories: Category[] = [];\r\n  constructor(private categoryService : CategoryService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.categoryService.getCategories().subscribe({\r\n      next:categories => {\r\n        this.Categories = categories;\r\n      },\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"table-responsive\">\r\n    <table class=\"table table-hover table-striped\">\r\n    <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Name</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n          <tr *ngFor = \"let cat of Categories\" [routerLink]=\"['/admin/categories',cat.id,'edit']\" style=\"cursor: pointer;\">\r\n              <td>{{cat.id}}</td>\r\n              <td>{{cat.name}}</td>\r\n          </tr>\r\n      </tbody>\r\n    \r\n    </table>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Order } from './../../models/order';\r\nimport { OrderService } from './../../services/order.service';\r\nimport { SignalRService } from './../../services/signal-r.service';\r\n\r\n@Component({\r\n  selector: 'app-listing-orders',\r\n  templateUrl: './listing-orders.component.html',\r\n  styleUrls: ['./listing-orders.component.scss']\r\n})\r\nexport class ListingOrdersComponent implements OnInit {\r\n\r\n  orders: Order[];\r\n  constructor(private orderService: OrderService, private signalRService: SignalRService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.orderService.getOrders().subscribe({\r\n      next: orders => this.orders = orders\r\n    });\r\n\r\n    this.signalRService.orderReceived.subscribe((order:any) => {\r\n      this.orders.unshift(order)\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"d-flex flex-wrap\">\r\n      <app-order \r\n          *ngFor=\"let item of orders\" [order]=\"item\"\r\n          style=\"cursor: pointer;\"\r\n          [routerLink]=\"['/admin','orders',item.id]\"\r\n          class=\"d-flex justify-content-center p-3\"></app-order>\r\n  </div>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Product } from './../../models/product';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-listing-products',\r\n  templateUrl: './listing-products.component.html',\r\n  styleUrls: ['./listing-products.component.scss']\r\n})\r\nexport class ListingProductsComponent implements OnInit, OnDestroy {\r\n\r\n  products: Product[] = [];\r\n  productsSub: Subscription;\r\n  constructor(private productService: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.productsSub = this.productService.getProductsSubject().subscribe({\r\n      next: products => {\r\n        this.products = products;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.productsSub.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"table-responsive\">\r\n    <table class=\"table table-hover table-striped\">\r\n    <thead>\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Name</th>\r\n          <th>Price</th>\r\n          <th>Category</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n          <tr *ngFor = \"let product of products\" [routerLink]=\"['/admin/products',product.id,'edit']\" style=\"cursor: pointer;\">\r\n              <td>{{product.id}}</td>\r\n              <td>{{product.name}}</td>\r\n              <td>{{product.price|currency:\"EGP\":\"symbol\"}}</td>\r\n              <td>{{product.categoryName}}</td>\r\n          </tr>\r\n      </tbody>\r\n    \r\n    </table>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Order } from './../../models/order';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.scss']\r\n})\r\nexport class OrderComponent implements OnInit {\r\n\r\n  @Input() order: Order\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"order\">\r\n    <div class=\"card border-success text-center\">\r\n        <div class=\"card-body text-success\">\r\n          <h5 class=\"card-text\">Order #{{order.id}}</h5>\r\n        </div>\r\n    </div>\r\n    <div class=\"text-center text-black-50 \">\r\n        Details .. \r\n        <i class=\"fa fa-chevron-right font-sm font-weight-light\"></i>\r\n        <i class=\"fa fa-chevron-right font-sm font-weight-light\"></i>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}